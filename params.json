{
  "name": "Sweetalert",
  "tagline": "A beautiful replacement for JavaScript's \"alert\"",
  "body": "<!doctype html>\r\n\r\n<html>\r\n\r\n<head>\r\n  <meta charset=\"utf-8\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=0\" />\r\n  <title>SweetAlert</title>\r\n\r\n  <link rel=\"stylesheet\" href=\"example/example.css\">\r\n  <script src=\"https://code.jquery.com/jquery-2.1.3.min.js\"></script>\r\n\r\n  <!-- This is what you need -->\r\n  <script src=\"dist/sweetalert-dev.js\"></script>\r\n  <link rel=\"stylesheet\" href=\"dist/sweetalert.css\">\r\n  <!--.......................-->\r\n\r\n</head>\r\n\r\n<body>\r\n\r\n<h1>Sweet Alert</h1>\r\n<h2>A beautiful replacement for JavaScript's \"Alert\"</h2>\r\n<button class=\"download\">Download</button>\r\n\r\n<!-- What does it do? -->\r\n<h3>So... What does it do?</h3>\r\n<p>Hereâ€™s a comparison of a standard error message. The first one uses the built-in <strong>alert</strong>-function, while the second is using <strong>sweetAlert</strong>.</p>\r\n\r\n<div class=\"showcase normal\">\r\n\t<h4>Normal alert</h4>\r\n\t<button>Show error message</button>\r\n\r\n\t<h5>Code:</h5>\r\n\t<pre><span class=\"attr\">alert</span>(<span class=\"str\">\"Oops... Something went wrong!\"</span>);\r\n\r\n\t</pre>\r\n\r\n\t<div class=\"vs-icon\"></div>\r\n</div>\r\n\r\n<div class=\"showcase sweet\">\r\n\t<h4>Sweet Alert</h4>\r\n\t<button>Show error message</button>\r\n\r\n\t<h5>Code:</h5>\r\n\t<pre><span class=\"attr\">sweetAlert</span>(<span class=\"str\">\"Oops...\"</span>, <span class=\"str\">\"Something went wrong!\"</span>, <span class=\"str\">\"error\"</span>);</pre>\r\n</div>\r\n\r\n<p>Pretty cool huh? SweetAlert automatically centers itself on the page and looks great no matter if you're using a desktop computer, mobile or tablet. It's even highly customizeable, as you can see below!</p>\r\n\r\n\r\n<!-- Examples -->\r\n<h3>More examples</h3>\r\n\r\n<p class=\"center\">In these examples, we're using the shorthand function <strong>swal</strong> to call sweetAlert.</p>\r\n\r\n<ul class=\"examples\">\r\n\r\n\t<li class=\"message\">\r\n\t\t<div class=\"ui\">\r\n\t\t\t<p>A basic message</p>\r\n\t\t\t<button>Try me!</button>\r\n\t\t</div>\r\n\t\t<pre><span class=\"attr\">swal</span>(<span class=\"str\">\"Here's a message!\"</span>)</pre>\r\n\t</li>\r\n\r\n\t<li class=\"title-text\">\r\n\t\t<div class=\"ui\">\r\n\t\t\t<p>A title with a text under</p>\r\n\t\t\t<button>Try me!</button>\r\n\t\t</div>\r\n\t\t<pre><span class=\"attr\">swal</span>(<span class=\"str\">\"Here's a message!\"</span>, <span class=\"str\">\"It's pretty, isn't it?\"</span>)</pre>\r\n\t</li>\r\n\r\n\t<li class=\"success\">\r\n\t\t<div class=\"ui\">\r\n\t\t\t<p>A success message!</p>\r\n\t\t\t<button>Try me!</button>\r\n\t\t</div>\r\n\t\t<pre><span class=\"attr\">swal</span>(<span class=\"str\">\"Good job!\"</span>, <span class=\"str\">\"You clicked the button!\"</span>, <span class=\"str\">\"success\"</span>)</pre>\r\n\t</li>\r\n\r\n\t<li class=\"warning confirm\">\r\n\t\t<div class=\"ui\">\r\n\t\t\t<p>A warning message, with a function attached to the \"Confirm\"-button...</p>\r\n\t\t\t<button>Try me!</button>\r\n\t\t</div>\r\n\t\t<pre><span class=\"attr\">swal</span>({\r\n&nbsp;&nbsp;title: <span class=\"str\">\"Are you sure?\"</span>,\r\n&nbsp;&nbsp;text: <span class=\"str\">\"You will not be able to recover this imaginary file!\"</span>,\r\n&nbsp;&nbsp;type: <span class=\"str\">\"warning\"</span>,\r\n&nbsp;&nbsp;showCancelButton: <span class=\"val\">true</span>,\r\n&nbsp;&nbsp;confirmButtonColor: <span class=\"str\">\"#DD6B55\"</span>,\r\n&nbsp;&nbsp;confirmButtonText: <span class=\"str\">\"Yes, delete it!\"</span>,\r\n&nbsp;&nbsp;closeOnConfirm: <span class=\"val\">false</span>\r\n},\r\n<span class=\"func\"><i>function</i></span>(){\r\n&nbsp;&nbsp;<span class=\"attr\">swal</span>(<span class=\"str\">\"Deleted!\"</span>, <span class=\"str\">\"Your imaginary file has been deleted.\"</span>, <span class=\"str\">\"success\"</span>);\r\n});</pre>\r\n\t</li>\r\n\r\n\t<li class=\"warning cancel\">\r\n\t\t<div class=\"ui\">\r\n\t\t\t<p>... and by passing a parameter, you can execute something else for \"Cancel\".</p>\r\n\t\t\t<button>Try me!</button>\r\n\t\t</div>\r\n\t\t<pre><span class=\"attr\">swal</span>({\r\n&nbsp;&nbsp;title: <span class=\"str\">\"Are you sure?\"</span>,\r\n&nbsp;&nbsp;text: <span class=\"str\">\"You will not be able to recover this imaginary file!\"</span>,\r\n&nbsp;&nbsp;type: <span class=\"str\">\"warning\"</span>,\r\n&nbsp;&nbsp;showCancelButton: <span class=\"val\">true</span>,\r\n&nbsp;&nbsp;confirmButtonColor: <span class=\"str\">\"#DD6B55\"</span>,\r\n&nbsp;&nbsp;confirmButtonText: <span class=\"str\">\"Yes, delete it!\"</span>,\r\n&nbsp;&nbsp;cancelButtonText: <span class=\"str\">\"No, cancel plx!\"</span>,\r\n&nbsp;&nbsp;closeOnConfirm: <span class=\"val\">false</span>,\r\n&nbsp;&nbsp;closeOnCancel: <span class=\"val\">false</span>\r\n},\r\n<span class=\"func\"><i>function</i></span>(isConfirm){\r\n&nbsp;&nbsp;<span class=\"tag\">if</span> (isConfirm) {\r\n&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"attr\">swal</span>(<span class=\"str\">\"Deleted!\"</span>, <span class=\"str\">\"Your imaginary file has been deleted.\"</span>, <span class=\"str\">\"success\"</span>);\r\n&nbsp;&nbsp;} <span class=\"tag\">else</span> {\r\n\t&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"attr\">swal</span>(<span class=\"str\">\"Cancelled\"</span>, <span class=\"str\">\"Your imaginary file is safe :)\"</span>, <span class=\"str\">\"error\"</span>);\r\n&nbsp;&nbsp;}\r\n});</pre>\r\n\t</li>\r\n\r\n\t<li class=\"custom-icon\">\r\n\t\t<div class=\"ui\">\r\n\t\t\t<p>A message with a custom icon</p>\r\n\t\t\t<button>Try me!</button>\r\n\t\t</div>\r\n\t\t<pre><span class=\"attr\">swal</span>({\r\n&nbsp;&nbsp;title: <span class=\"str\">\"Sweet!\"</span>,\r\n&nbsp;&nbsp;text: <span class=\"str\">\"Here's a custom image.\"</span>,\r\n&nbsp;&nbsp;imageUrl: <span class=\"str\">\"images/thumbs-up.jpg\"</span>\r\n});</pre>\r\n\t</li>\r\n\r\n\t<li class=\"message-html\">\r\n\t\t<div class=\"ui\">\r\n\t\t\t<p>An HTML message</p>\r\n\t\t\t<button>Try me!</button>\r\n\t\t</div>\r\n\t\t<pre><span class=\"attr\">swal</span>({\r\n&nbsp;&nbsp;title: <span class=\"str\">\"HTML &lt;small&gt;Title&lt;/small&gt;!\"</span>,\r\n&nbsp;&nbsp;text: <span class=\"str\">\"A custom &lt;span style=\"color:#F8BB86\"&gt;html&lt;span&gt; message.\"</span>,\r\n&nbsp;&nbsp;html: <span class=\"val\">true</span>\r\n});</pre>\r\n\t</li>\r\n\r\n\t<li class=\"timer\">\r\n\t\t<div class=\"ui\">\r\n\t\t\t<p>A message with auto close timer</p>\r\n\t\t\t<button>Try me!</button>\r\n\t\t</div>\r\n\t\t<pre><span class=\"attr\">swal</span>({\r\n&nbsp;&nbsp;title: <span class=\"str\">\"Auto close alert!\"</span>,\r\n&nbsp;&nbsp;text: <span class=\"str\">\"I will close in 2 seconds.\"</span>,\r\n&nbsp;&nbsp;timer: <span class=\"val\">2000</span>,\r\n&nbsp;&nbsp;showConfirmButton: <span class=\"val\">false</span>\r\n});</pre>\r\n\t</li>\r\n\r\n\r\n\t<li class=\"input\">\r\n\t\t<div class=\"ui\">\r\n\t\t\t<p>A replacement for the \"prompt\" function</p>\r\n\t\t\t<button>Try me!</button>\r\n\t\t</div>\r\n\t\t<pre><span class=\"attr\">swal</span>({\r\n&nbsp;&nbsp;title: <span class=\"str\">\"An input!\"</span>,\r\n&nbsp;&nbsp;text: <span class=\"str\">\"Write something interesting:\"</span>,\r\n&nbsp;&nbsp;type: <span class=\"str\">\"input\"</span>,\r\n&nbsp;&nbsp;showCancelButton: <span class=\"val\">true</span>,\r\n&nbsp;&nbsp;closeOnConfirm: <span class=\"val\">false</span>,\r\n&nbsp;&nbsp;animation: <span class=\"str\">\"slide-from-top\"</span>,\r\n&nbsp;&nbsp;inputPlaceholder: <span class=\"str\">\"Write something\"</span>\r\n},\r\n<span class=\"func\"><i>function</i></span>(<span class=\"arg\">inputValue</span>){\r\n&nbsp;&nbsp;<span class=\"tag\">if</span> (inputValue <span class=\"tag\">===</span> <span class=\"val\">false</span>) <span class=\"tag\">return</span> <span class=\"val\">false</span>;\r\n&nbsp;&nbsp;\r\n&nbsp;&nbsp;<span class=\"tag\">if</span> (inputValue <span class=\"tag\">===</span> <span class=\"str\">\"\"</span>) {\r\n&nbsp;&nbsp;&nbsp;&nbsp;swal<span class=\"tag\">.</span><span class=\"attr\">showInputError</span>(<span class=\"str\">\"You need to write something!\"</span>);\r\n&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"tag\">return</span> <span class=\"val\">false</span>\r\n&nbsp;&nbsp;}\r\n&nbsp;&nbsp;\r\n&nbsp;&nbsp;<span class=\"attr\">swal</span>(<span class=\"str\">\"Nice!\"</span>, <span class=\"str\">\"You wrote: \"</span> + inputValue, <span class=\"str\">\"success\"</span>);\r\n});</pre>\r\n\t</li>\r\n\r\n  <li class=\"ajax\">\r\n    <div class=\"ui\">\r\n\t\t\t<p>With a loader (for AJAX request for example)</p>\r\n\t\t\t<button>Try me!</button>\r\n\t\t</div>\r\n\t\t<pre><span class=\"attr\">swal</span>({\r\n&nbsp;&nbsp;title: <span class=\"str\">\"Ajax request example\"</span>,\r\n&nbsp;&nbsp;text: <span class=\"str\">\"Submit to run ajax request\"</span>,\r\n&nbsp;&nbsp;type: <span class=\"str\">\"info\"</span>,\r\n&nbsp;&nbsp;showCancelButton: <span class=\"val\">true</span>,\r\n&nbsp;&nbsp;closeOnConfirm: <span class=\"val\">false</span>,\r\n&nbsp;&nbsp;showLoaderOnConfirm: <span class=\"val\">true</span>,\r\n},\r\n<span class=\"func\"><i>function</i></span>(){\r\n&nbsp;&nbsp;<span class=\"attr\">setTimeout</span>(<span class=\"func\"><i>function</i></span>(){\r\n&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"attr\">swal</span>(<span class=\"str\">\"Ajax request finished!\"</span>);\r\n&nbsp;&nbsp;}, <span class=\"val\">2000</span>);\r\n});</pre>\r\n\t</li>\r\n\r\n\t<li class=\"theme\">\r\n\t\t<div class=\"ui\">\r\n\t\t\t<p>You can also change the theme of SweetAlert!</p>\r\n\t\t\t<button>Try me!</button>\r\n\t\t</div>\r\n\t\t<pre>&lt;<span class=\"tag\">link</span> <span class=\"attr\">rel</span>=<span class=\"str\">\"stylesheet\"</span> <span class=\"tag\">type</span>=<span class=\"str\">\"text/css\"</span> <span class=\"tag\">href</span>=<span class=\"str\">\"dist/sweetalert.css\"</span>&gt;\r\n\t\t\t&lt;<span class=\"tag\">link</span> <span class=\"attr\">rel</span>=<span class=\"str\">\"stylesheet\"</span> <span class=\"tag\">type</span>=<span class=\"str\">\"text/css\"</span> <span class=\"tag\">href</span>=<span class=\"str\">\"themes/twitter.css\"</span>&gt;</pre>\r\n\t</li>\r\n\r\n</ul>\r\n\r\n\r\n<!-- Download & Install -->\r\n<h3 id=\"download-section\">Download & install</h3>\r\n\r\n<div class=\"center-container\">\r\n\t<p class=\"center\"><b>Method 1:</b> Install through bower:</p>\r\n\t<pre class=\"center\">$ bower install sweetalert</pre>\r\n</div>\r\n\r\n<div class=\"center-container\">\r\n\t<p class=\"center\"><b>Method 2:</b> Install through NPM:</p>\r\n\t<pre class=\"center\">$ npm install sweetalert</pre>\r\n</div>\r\n\r\n<p class=\"center\"><b>Method 3:</b> Download the sweetAlert <strong>CSS</strong> and <strong>JavaScript</strong> files.</p>\r\n\r\n<a class=\"button\" href=\"https://github.com/t4t5/sweetalert/archive/master.zip\" download>Download files</a>\r\n\r\n<ol>\r\n\t<li>\r\n\t\t<p>Initialize the plugin by referencing the necessary files:</p>\r\n\t\t<pre>&lt;<span class=\"tag\">script</span> <span class=\"attr\">src</span>=<span class=\"str\">\"dist/sweetalert.min.js\"</span>&gt;&lt;/<span class=\"tag\">script</span>&gt;\r\n&lt;<span class=\"tag\">link</span> <span class=\"attr\">rel</span>=<span class=\"str\">\"stylesheet\"</span> <span class=\"tag\">type</span>=<span class=\"str\">\"text/css\"</span> <span class=\"tag\">href</span>=<span class=\"str\">\"dist/sweetalert.css\"</span>&gt;</pre>\r\n\t</li>\r\n\r\n\t<li>\r\n\t\t<p>Call the sweetAlert-function after the page has loaded</p>\r\n\t\t<pre><span class=\"attr\">swal</span>({\r\n&nbsp;&nbsp;title: <span class=\"str\">\"Error!\"</span>,\r\n&nbsp;&nbsp;text: <span class=\"str\">\"Here's my error message!\"</span>,\r\n&nbsp;&nbsp;type: <span class=\"str\">\"error\"</span>,\r\n&nbsp;&nbsp;confirmButtonText: <span class=\"str\">\"Cool\"</span>\r\n});\r\n</pre>\r\n\t</li>\r\n</ol>\r\n\r\n\r\n\r\n<!-- Configuration -->\r\n<h3>Configuration</h3>\r\n\r\n<p class=\"center\">Here are the keys that you can use if you pass an object into sweetAlert:</p>\r\n\r\n<table>\r\n\t<tr class=\"titles\">\r\n\t\t<th>\r\n\t\t\t<div class=\"border-left\"></div>\r\n\t\t\tArgument\r\n\t\t</th>\r\n\t\t<th>Default value</th>\r\n\t\t<th>\r\n\t\t\t<div class=\"border-right\"></div>\r\n\t\t\tDescription\r\n\t\t</th>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td><b>title</b></td>\r\n\t\t<td><i>null (required)</i></td>\r\n\t\t<td>The title of the modal. It can either be added to the object under the key \"title\" or passed as the first parameter of the function.</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td><b>text</b></td>\r\n\t\t<td><i>null</i></td>\r\n\t\t<td>A description for the modal. It can either be added to the object under the key \"text\" or passed as the second parameter of the function.</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td><b>type</b></td>\r\n\t\t<td><i>null</i></td>\r\n\t\t<td>The type of the modal. SweetAlert comes with 4 built-in types which will show a corresponding icon animation: \"<strong>warning</strong>\", \"<strong>error</strong>\", \"<strong>success</strong>\" and \"<strong>info\"</strong>. You can also set it as \"<strong>input</strong>\" to get a prompt modal. It can either be put in the object under the key \"type\" or passed as the third parameter of the function.</td>\r\n\t</tr>\r\n    <tr>\r\n      <td><b>allowEscapeKey</b></td>\r\n      <td><i>true</i></td>\r\n      <td>If set to <strong>true</strong>, the user can dismiss the modal by pressing the Escape key.</td>\r\n    </tr>\r\n\t<tr>\r\n\t\t<td><b>customClass</b></td>\r\n\t\t<td><i>null</i></td>\r\n\t\t<td>A custom CSS class for the modal. It can be added to the object under the key \"customClass\".</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td><b>allowOutsideClick</b></td>\r\n\t\t<td><i>false</i></td>\r\n\t\t<td>If set to <strong>true</strong>, the user can dismiss the modal by clicking outside it.</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td><b>showCancelButton</b></td>\r\n\t\t<td><i>false</i></td>\r\n\t\t<td>If set to <strong>true</strong>, a \"Cancel\"-button will be shown, which the user can click on to dismiss the modal.</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td><b>showConfirmButton</b></td>\r\n\t\t<td><i>true</i></td>\r\n\t\t<td>If set to <strong>false</strong>, the \"OK/Confirm\"-button will be hidden. Make sure you set a timer or set allowOutsideClick to true when using this, in order not to annoy the user.</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td><b>confirmButtonText</b></td>\r\n\t\t<td><i>\"OK\"</i></td>\r\n\t\t<td>Use this to change the text on the \"Confirm\"-button. If showCancelButton is set as true, the confirm button will automatically show \"Confirm\" instead of \"OK\".</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td><b>confirmButtonColor</b></td>\r\n\t\t<td><i>\"#AEDEF4\"</i></td>\r\n\t\t<td>Use this to change the background color of the \"Confirm\"-button (must be a HEX value).</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td><b>cancelButtonText</b></td>\r\n\t\t<td><i>\"Cancel\"</i></td>\r\n\t\t<td>Use this to change the text on the \"Cancel\"-button.</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td><b>closeOnConfirm</b></td>\r\n\t\t<td><i>true</i></td>\r\n\t\t<td>Set to <i>false</i> if you want the modal to stay open even if the user presses the \"Confirm\"-button. This is especially useful if the function attached to the \"Confirm\"-button is another SweetAlert.</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td><b>closeOnCancel</b></td>\r\n\t\t<td><i>true</i></td>\r\n\t\t<td>Same as closeOnConfirm, but for the cancel button.</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td><b>imageUrl</b></td>\r\n\t\t<td><i>null</i></td>\r\n\t\t<td>Add a customized icon for the modal. Should contain a string with the path to the image.</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td><b>imageSize</b></td>\r\n\t\t<td><i>\"80x80\"</i></td>\r\n\t\t<td>If imageUrl is set, you can specify imageSize to describes how big you want the icon to be in px. Pass in a string with two values separated by an \"x\". The first value is the width, the second is the height.</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td><b>timer</b></td>\r\n\t\t<td><i>null</i></td>\r\n\t\t<td>Auto close timer of the modal. Set in ms (milliseconds).</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td><b>html</b></td>\r\n\t\t<td><i>false</i></td>\r\n\t\t<td>If set to true, will not escape title and text parameters. (Set to false if you're worried about XSS attacks.)</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td><b>animation</b></td>\r\n\t\t<td><i>true</i></td>\r\n\t\t<td>If set to <strong>false</strong>, the modal's animation will be disabled. Possible (string) values : <strong>pop</strong> (default when animation set to true), <strong>slide-from-top</strong>, <strong>slide-from-bottom</strong></td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td><b>inputType</b></td>\r\n\t\t<td><i>\"text\"</i></td>\r\n\t\t<td>Change the type of the input field when using <strong>type: \"input\"</strong> (this can be useful if you want users to type in their password for example).</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td><b>inputPlaceholder</b></td>\r\n\t\t<td><i>null</i></td>\r\n\t\t<td>When using the input-type, you can specify a placeholder to help the user.</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td><b>inputValue</b></td>\r\n\t\t<td><i>null</i></td>\r\n\t\t<td>Specify a default text value that you want your input to show when using <strong>type: \"input\"</strong></td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td><b>showLoaderOnConfirm</b></td>\r\n\t\t<td><i>false</i></td>\r\n    <td>Set to <strong>true</strong> to disable the buttons and show that something is loading.</td>\r\n\t</tr>\r\n</table>\r\n\r\n\r\n<!-- Methods -->\r\n<h3>Methods</h3>\r\n\r\n<p class=\"center\">SweetAlert also comes with some simple methods that you can call:</p>\r\n\r\n<table>\r\n\t<tr class=\"titles\">\r\n\t\t<th>\r\n\t\t\t<div class=\"border-left\"></div>\r\n\t\t\tFunction\r\n\t\t</th>\r\n\t\t<th>Example</th>\r\n\t\t<th>\r\n\t\t\t<div class=\"border-right\"></div>\r\n\t\t\tDescription\r\n\t\t</th>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>setDefaults</td>\r\n\t\t<td><i>swal.setDefaults({ confirmButtonColor: '#0000' });</i></td>\r\n\t\t<td>If you end up using a lot of the same settings when calling SweetAlert, you can use setDefaults at the start of your program to set them once and for all!</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>close</td>\r\n\t\t<td><i>swal.close();</i></td>\r\n\t\t<td>Close the currently open SweetAlert programatically.</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>showInputError</td>\r\n\t\t<td><i>swal.showInputError(\"Invalid email!\");</i></td>\r\n\t\t<td>Show an error message after validating the input field, if the user's data is bad</td>\r\n\t</tr>\r\n\t<tr>\r\n\t\t<td>enableButtons, disableButtons</td>\r\n\t\t<td><i>swal.disableButtons();</i></td>\r\n\t\t<td>Disable or enable the user to click on the cancel and confirm buttons.</td>\r\n\t</tr>\r\n</table>\r\n\r\n\r\n\r\n<!-- Contribute -->\r\n<h3>Contribute</h3>\r\n<p>SweetAlert was created by <a href=\"http://tristanedwards.me\" target=\"_blank\">Tristan Edwards</a>, you can follow him on <a href=\"https://twitter.com/t4t5\" target=\"_blank\" class=\"twitter\">Twitter</a> or <a href=\"https://dribbble.com/tristanedwards\" target=\"_blank\" class=\"dribbble\">Dribbble</a> for updates and other cool projects!</p>\r\n<p>Feel free to fork SweetAlert on <a href=\"https://github.com/t4t5/sweetalert\" class=\"github\">GitHub</a> if you have any features that you want to add!</p>\r\n\r\n\r\n<footer>\r\n\t<span class=\"te-logo\">TE</span> â€¢ <script>document.write(new Date().getFullYear())</script>\r\n</footer>\r\n\r\n\r\n<script>\r\n\r\ndocument.querySelector('button.download').onclick = function(){\r\n\t$(\"html, body\").animate({ scrollTop: $(\"#download-section\").offset().top }, 1000);\r\n};\r\n\r\ndocument.querySelector('.showcase.normal button').onclick = function(){\r\n\talert(\"Oops... Something went wrong!\");\r\n};\r\n\r\ndocument.querySelector('.showcase.sweet button').onclick = function(){\r\n\tswal(\"Oops...\", \"Something went wrong!\", \"error\");\r\n};\r\n\r\ndocument.querySelector('ul.examples li.message button').onclick = function(){\r\n\tswal(\"Here's a message!\");\r\n};\r\n\r\ndocument.querySelector('ul.examples li.timer button').onclick = function(){\r\n\tswal({\r\n\t\ttitle: \"Auto close alert!\",\r\n\t\ttext: \"I will close in 2 seconds.\",\r\n\t\ttimer: 2000,\r\n\t\tshowConfirmButton: false\r\n\t});\r\n};\r\n\r\ndocument.querySelector('ul.examples li.title-text button').onclick = function(){\r\n\tswal(\"Here's a message!\", \"It's pretty, isn't it?\");\r\n};\r\n\r\ndocument.querySelector('ul.examples li.success button').onclick = function(){\r\n\tswal(\"Good job!\", \"You clicked the button!\", \"success\");\r\n};\r\n\r\ndocument.querySelector('ul.examples li.warning.confirm button').onclick = function(){\r\n\tswal({\r\n\t\ttitle: \"Are you sure?\",\r\n\t\ttext: \"You will not be able to recover this imaginary file!\",\r\n\t\ttype: \"warning\",\r\n\t\tshowCancelButton: true,\r\n\t\tconfirmButtonColor: '#DD6B55',\r\n\t\tconfirmButtonText: 'Yes, delete it!',\r\n\t\tcloseOnConfirm: false\r\n\t},\r\n\tfunction(){\r\n\t\tswal(\"Deleted!\", \"Your imaginary file has been deleted!\", \"success\");\r\n\t});\r\n};\r\n\r\ndocument.querySelector('ul.examples li.warning.cancel button').onclick = function(){\r\n\tswal({\r\n\t\ttitle: \"Are you sure?\",\r\n\t\ttext: \"You will not be able to recover this imaginary file!\",\r\n\t\ttype: \"warning\",\r\n\t\tshowCancelButton: true,\r\n\t\tconfirmButtonColor: '#DD6B55',\r\n\t\tconfirmButtonText: 'Yes, delete it!',\r\n\t\tcancelButtonText: \"No, cancel plx!\",\r\n\t\tcloseOnConfirm: false,\r\n\t\tcloseOnCancel: false\r\n\t},\r\n\tfunction(isConfirm){\r\n    if (isConfirm){\r\n      swal(\"Deleted!\", \"Your imaginary file has been deleted!\", \"success\");\r\n    } else {\r\n      swal(\"Cancelled\", \"Your imaginary file is safe :)\", \"error\");\r\n    }\r\n\t});\r\n};\r\n\r\ndocument.querySelector('ul.examples li.custom-icon button').onclick = function(){\r\n\tswal({\r\n\t\ttitle: \"Sweet!\",\r\n\t\ttext: \"Here's a custom image.\",\r\n\t\timageUrl: 'example/images/thumbs-up.jpg'\r\n\t});\r\n};\r\n\r\ndocument.querySelector('ul.examples li.message-html button').onclick = function(){\r\n\tswal({\r\n\t\ttitle: \"HTML <small>Title</small>!\",\r\n\t\ttext: 'A custom <span style=\"color:#F8BB86\">html<span> message.',\r\n\t\thtml: true\r\n\t});\r\n};\r\n\r\ndocument.querySelector('ul.examples li.input button').onclick = function(){\r\n\tswal({\r\n\t\ttitle: \"An input!\",\r\n\t\ttext: 'Write something interesting:',\r\n\t\ttype: 'input',\r\n\t\tshowCancelButton: true,\r\n\t\tcloseOnConfirm: false,\r\n\t\tanimation: \"slide-from-top\",\r\n\t\tinputPlaceholder: \"Write something\",\r\n\t},\r\n\tfunction(inputValue){\r\n\t\tif (inputValue === false) return false;\r\n\r\n\t\tif (inputValue === \"\") {\r\n\t\t\tswal.showInputError(\"You need to write something!\");\r\n\t\t\treturn false;\r\n\t\t}\r\n    \r\n\t\tswal(\"Nice!\", 'You wrote: ' + inputValue, \"success\");\r\n\r\n\t});\r\n};\r\n\r\ndocument.querySelector('ul.examples li.theme button').onclick = function() {\r\n\tswal({\r\n\t\ttitle: \"Themes!\",\r\n\t\ttext: \"Here's the Twitter theme for SweetAlert!\",\r\n\t\tconfirmButtonText: \"Cool!\",\r\n\t\tcustomClass: 'twitter'\r\n\t});\r\n};\r\n\r\ndocument.querySelector('ul.examples li.ajax button').onclick = function() {\r\n  swal({\r\n    title: 'Ajax request example',\r\n    text: 'Submit to run ajax request',\r\n    type: 'info',\r\n    showCancelButton: true,\r\n    closeOnConfirm: false,\r\n    showLoaderOnConfirm: true,\r\n  }, function(){\r\n    setTimeout(function() {\r\n      swal('Ajax request finished!');\r\n    }, 2000);\r\n  });\r\n};\r\n\r\n</script>\r\n\r\n\r\n\r\n</body>\r\n\r\n</html>\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}